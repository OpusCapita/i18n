defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:grails-2.4.4-jdk-8u131-nodejs-8.9.4-maven-3.3.9
  working_directory: ~/build

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name: Environment inject.
          command: env_inject.sh

      - checkout

      - restore_cache:
          keys:
            - i18n-{{ .Branch }}-{{ checksum "package.json" }}
            - i18n-{{ .Branch }}
            - i18n

      - run:
          name: "Installing dependencies."
          command: yarn install

      - save_cache:
          key: i18n-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
              - /root/build/node_mmodules
              - /root/build/yarn.lock

      - run:
          name: "Running lint."
          command: npm run lint

      - run:
          name: "Tests."
          command: |
            npm test -- --reporter mocha-junit-reporter
          environment:
            MOCHA_FILE: ./junit/test-results.xml

      - run:
          name: upload-coverage
          command: npm run upload-coverage

      - store_artifacts:
          path: ./junit/test-results.xml
          prefix: tests

      - store_test_results:
          path: ./junit

  build_release:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh

      - checkout

      - restore_cache:
          keys:
            - i18n-{{ .Branch }}-{{ checksum "package.json" }}
            - i18n-{{ .Branch }}
            - i18n

      - run:
          name: "Installing dependencies."
          command: yarn install

      - save_cache:
          key: i18n-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
              - /root/build/node_mmodules
              - /root/build/yarn.lock

      - run:
          name: "Running lint."
          command: npm run lint

      - run:
          name: "Deploy."
          command: npm run publish-release

  release:
    <<: *defaults
    steps:

      - run:
          name: Environment inject
          command: env_inject.sh

      - checkout

      - run:
          name: Executing release scrtipt.
          command: .circleci/release.sh

workflows:
  version: 2
  release-and-build:
    jobs:
      - release:
          filters:
            branches:
              only: release
      - build:
          filters:
            branches:
              ignore: release

      - build_release:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
